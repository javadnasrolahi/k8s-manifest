apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: prometheus
  name: prometheus
spec:
  serviceName: "prometheus"
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          imagePullPolicy: IfNotPresent
          args:
            - "--storage.tsdb.retention.time=12h"
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          # resources:
          #   requests:
          #     cpu: 500m
          #     memory: 500M
          #   limits:
          #     cpu: 1
          #     memory: 1Gi
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            # - name: prometheus-storage-volume
            - name: prom-claim
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-cm

      nodeName: worker01-s
  volumeClaimTemplates:
    - metadata:
        name: prom-claim
      spec:
        volumeName: prom-pv
        storageClassName: local-storage
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi 
  
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
    name: prom-port 
  selector:
    app: prometheus
  clusterIP: None

# type: NodePort
# nodePort: 30001
# --- 
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: prom-claim
# spec: 
#   volumeName: example-pv
#   storageClassName: local-storage
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests: 
#       storage: 2Gi